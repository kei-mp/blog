---
// DarkModeToggle.astro
---

<button id="theme-toggle" aria-label="Toggle dark mode">
  <svg id="sun-icon" width="25" height="25" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
    <circle cx="12" cy="12" r="5"></circle>
    <line x1="12" y1="1" x2="12" y2="3"></line>
    <line x1="12" y1="21" x2="12" y2="23"></line>
    <line x1="4.22" y1="4.22" x2="5.64" y2="5.64"></line>
    <line x1="18.36" y1="18.36" x2="19.78" y2="19.78"></line>
    <line x1="1" y1="12" x2="3" y2="12"></line>
    <line x1="21" y1="12" x2="23" y2="12"></line>
    <line x1="4.22" y1="19.78" x2="5.64" y2="18.36"></line>
    <line x1="18.36" y1="5.64" x2="19.78" y2="4.22"></line>
  </svg>
  <svg id="moon-icon" width="25" height="25" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" style="display: none;">
    <path d="M21 12.79A9 9 0 1 1 11.21 3 7 7 0 0 0 21 12.79z"></path>
  </svg>
</button>

<script>
  function initTheme() {
    const themeToggle = document.getElementById('theme-toggle');
    const sunIcon = document.getElementById('sun-icon');
    const moonIcon = document.getElementById('moon-icon');
    
    if (!themeToggle || !sunIcon || !moonIcon) return;
   
    // get current theme from document (already set by inline script)
    let currentTheme = document.documentElement.getAttribute('data-theme') || 'light';
    
    // update icons based on current theme
    updateIcons(currentTheme);
   
    // toggle theme on button click
    themeToggle.addEventListener('click', () => {
      const newTheme = currentTheme === 'light' ? 'dark' : 'light';
      currentTheme = newTheme;
     
      document.documentElement.setAttribute('data-theme', newTheme);
      localStorage.setItem('theme', newTheme);
      updateIcons(newTheme);
    });
   
    function updateIcons(theme) {
      if (theme === 'dark') {
        sunIcon.style.display = 'none';
        moonIcon.style.display = 'block';
      } else {
        sunIcon.style.display = 'block';
        moonIcon.style.display = 'none';
      }
    }
  }
 
  // initialize on page load
  document.addEventListener('DOMContentLoaded', initTheme);
 
  // re-initialize on navigation (for Astro's client-side routing)
  document.addEventListener('astro:page-load', initTheme);
  
  // handle View Transitions - preserve theme during navigation
  document.addEventListener('astro:before-swap', () => {
    // store current theme before swap
    const currentTheme = document.documentElement.getAttribute('data-theme');
    if (currentTheme) {
      localStorage.setItem('theme', currentTheme);
    }
  });
  
  document.addEventListener('astro:after-swap', () => {
    // restore theme after swap
    const savedTheme = localStorage.getItem('theme');
    if (savedTheme) {
      document.documentElement.setAttribute('data-theme', savedTheme);
    }
  });
</script>

<style>
  #theme-toggle {
    background: none;
    border: none;
    cursor: pointer;
    border-radius: 0.375rem;
    display: flex;
    align-items: center;
    justify-content: center;
    color: var(--text-color);
    transition: background-color 0.2s ease;
  }
 
  #theme-toggle:hover {
    background-color: var(--border-color);
  }
</style>